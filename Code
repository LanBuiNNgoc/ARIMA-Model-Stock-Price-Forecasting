from AlgorithmImports import *

class OilShortSellingAlgorithm(QCAlgorithm):
    def Initialize(self):
        self.SetStartDate(2021, 1, 1)  # Set Start Date
        self.SetEndDate(2023, 1, 1)    # Set End Date
        self.SetCash(100000)           # Set Strategy Cash
        # Add the oil stock and set leverage
        oil_stock_security = self.AddEquity('XOM', Resolution.Daily)
        oil_stock_security.SetLeverage(2.0)
        self.oil_stock = oil_stock_security.Symbol
       
        # Schedule the volatility update at the start of each month
        self.Schedule.On(self.DateRules.MonthStart(self.oil_stock), self.TimeRules.AfterMarketOpen(self.oil_stock), self.UpdateVolatility)
        # Schedule the trading logic to run every Monday, 10 minutes after market open
        self.Schedule.On(self.DateRules.Every(DayOfWeek.Monday), self.TimeRules.AfterMarketOpen(self.oil_stock, 10), self.TradeLogic)
       
        self.volatility = 0.0
        self.selling_phase = 0


    def UpdateVolatility(self):
